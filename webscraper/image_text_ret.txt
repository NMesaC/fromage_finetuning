Some ideas:

1) Assume you have a model which can perform the retrieval using URLs. How should we store large amounts of urls?
Uhhh they're strings so I was thinking substring the URL and use that to hash into a separate disk to access
the full URL but thats probably slow / not necessary. Vector Database maybe? Uhh how do we even do retrieval in the
first place? Vectors need to map to images, but images are costly to store, so vectors should map
to tags but tags imply smaller amounts of data which implies collision unless those tags are somehow larger than
the original vector but smaller than the string representation which doesn't make sense.

So vectors need to map to strings. How the fuck are we going to make a function with the type of

vector -> string

be a hash function and make sense? You know without making it stupid. I don't see a way so maybe Vector Database
is the way? Cuz it doesn't feel like models can't learn the relations the question is how you STORE it.
